basePath: /api/v1
definitions:
  controllers.GenericErrorResponse:
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  controllers.LoginPayload:
    properties:
      password:
        example: admin123
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginSuccessResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  controllers.PingSuccessResponse:
    properties:
      message:
        example: pong
        type: string
      user:
        description: User who made the request
        example: admin
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Go Gin project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Gin Project API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginSuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/controllers.GenericErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/controllers.GenericErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.GenericErrorResponse'
      summary: Log in a user
      tags:
      - auth
  /ping:
    get:
      description: Returns a pong message, requires authentication.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PingSuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.GenericErrorResponse'
      security:
      - BearerAuth: []
      summary: Ping endpoint
      tags:
      - ping
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
